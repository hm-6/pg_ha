all:
  vars:
    # --- Cluster topology / naming used by Patroni DCS ---
    pg_cluster_scope: "pg-ha"
    pg_namespace: "/db/"

    # --- PostgreSQL/Patroni ports (avoid collisions) ---
    pg_version: 16
    postgres_port: 5432
    patroni_rest_port: 8008     # Patroni REST API (health, role checks)
    patroni_raft_port: 7000     # Patroni RAFT peering port

    # --- NEW: choose which interface to use for Patroni advertise/raft ---
    # Set to e.g. "eth1" on your new machines
    patroni_bind_interface: "enp1s0"

    # Patroni defaults
    patroni_name: "{{ inventory_hostname }}"

    # IP derived from chosen interface, fallback to default IPv4
    patroni_ip: >-
      {{
        (hostvars[inventory_hostname]['ansible_' ~ patroni_bind_interface] | default({})).ipv4.address
        | default(ansible_default_ipv4.address)
      }}

    # Patroni listen address:
    # - By default bind on all (0.0.0.0)
    # - If you prefer binding only to the chosen interface, set below accordingly
    patroni_listen_address: >-
      {{
        (hostvars[inventory_hostname]['ansible_' ~ patroni_bind_interface] | default({})).ipv4.address
        | default('0.0.0.0')
      }}

    # --- Network CIDR allowed for client + replication access in pg_hba ---
    pg_cluster_cidr: "192.168.178.0/24"

    # --- PostgreSQL credentials (change for production!) ---
    pg_superuser:
      username: "postgres"
      password: "postgres"
    pg_replication:
      username: "replicator"
      password: "postgres"

    # --- Patroni cluster-wide defaults (seeded into DCS on bootstrap) ---
    patroni_dcs:
      ttl: 30
      loop_wait: 10
      retry_timeout: 10
      synchronous_mode: true
      synchronous_mode_strict: true
      synchronous_node_count: 1
      postgresql:
        parameters:
          max_connections: 100
          shared_buffers: "128MB"
          wal_level: "replica"
          hot_standby: "on"
          hot_standby_feedback: "on"
          max_wal_senders: 10
          max_replication_slots: 10
          wal_keep_size: "128MB"

    # --- HAProxy ports & runtime socket paths ---
    haproxy_bind_interface: "enp1s0"
    haproxy_stats_port: 8404
    haproxy_write_port: 5000   # Client writes hit the leader
    haproxy_read_port: 5001    # Client reads hit replicas
    haproxy_runtime_socket_cfg: "/haproxy-runtime.sock"  # inside haproxy's chroot/config
    haproxy_runtime_socket_host: "/haproxy-runtime.sock" # on the host for check scripts

    # --- Checkmk thresholds & install target for local checks ---
    checkmk_warn_lag_bytes: 10485760     # 10 * 1024 * 1024
    checkmk_crit_lag_bytes: 104857600    # 100 * 1024 * 1024
    checkmk_local_dir: "/usr/lib/check_mk_agent/local/300"  # adjust to your agent layout

    # --- Package lists (kept here for easy OS tweaks) ---
    common_packages:
      - curl
      - gnupg
      - lsb-release
      - jq
      - socat

    db_packages:
      - "postgresql-{{ pg_version }}"
      - patroni
      - python3-psycopg2
      - python3-pysyncobj

    haproxy_packages:
      - haproxy
